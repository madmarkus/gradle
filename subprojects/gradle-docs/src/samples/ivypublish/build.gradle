import org.junit.Assert

apply plugin: 'java'

version = '1.0'
group = 'org.gradle.test'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'junit:junit:4.7'
    }
}

ant {
    importBuild "$rootDir/build.xml"
    buildDir = owner.buildDir.toString()
}

String ivyPattern = '/[module]/[revision]/ivy.xml'
String artifactPattern = '/[module]/[revision]/[artifact](.[ext])'
File localPublicationsDir = file("$buildDir/repo")

repositories {
    add(new org.apache.ivy.plugins.resolver.FileSystemResolver()) {
        name = 'repo'
        validate = false
        addIvyPattern(localPublicationsDir.absolutePath + ivyPattern)
        addArtifactPattern(localPublicationsDir.absolutePath + artifactPattern)
    }
}

task sourceJar(type: Jar) {
    baseName = 'ivypublishSource'
    from sourceSets.main.java
}

artifacts {
    archives sourceJar
}

uploadArchives {
    uploadDescriptor = true
    repositories {
        add project.repositories.repo
    }
    doLast {
        File repoDir = new File("$buildDir/repo/ivypublish/1.0/")
        Assert.assertEquals(["ivypublish.jar", "ivy.xml", "ivypublishSource.jar"] as Set,
                repoDir.listFiles().collect { it.name } as Set)
        Assert.assertEquals(jar.archivePath.size(), new File(repoDir, 'ivypublish.jar').size())
        Assert.assertEquals(sourceJar.archivePath.size(), new File(repoDir, 'ivypublishSource.jar').size())
    }
}

// It would be nice to test if the stuff published by Gradle can be read by a native ivy ant script.
// The tasks below are supposed to do this. But due to a serious Ivy bugs we can't do it at the
// moment (e.g. https://issues.apache.org/jira/browse/IVY-1110). As soon as this bug is fixed, we
// should uncomment the below.

//ivyConfigure.doLast {
//    def cacheDir = ant.properties['ivy.cache.dir'] + '/org.gradle.test'
//    println cacheDir
//    ant.delete(dir: cacheDir, verbose: true)
//}
//
//retrieveFromAnt {
//    dependsOn uploadArchives
//    doLast {
//        File retrieveDir = new File("$buildDir/antRetrieve")
//        Assert.assertEquals(retrieveDir.listFiles().collect { it.name } as Set,
//                ["ivypublish.jar", "ivypublishSource.jar"] as Set)
//        Assert.assertEquals(jar.archivePath.size(), new File(retrieveDir, 'ivypublish.jar').size())
//        Assert.assertEquals(sourceJar.archivePath.size(), new File(retrieveDir, 'ivypublishSource.jar').size())
//    }
//}





