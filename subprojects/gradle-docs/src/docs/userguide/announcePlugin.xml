<!--
  ~ Copyright 2009 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<chapter id='announce_plugin' xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>The Announce Plugin</title>
    <para>The Gradle announce plugin enables you to publish messages on succeded tasks to your favourite plattforms.
	It supports 
	<itemizedlist>
 		<listitem><ulink url='http://twitter.com'>Twitter,</ulink></listitem>
 		<listitem><ulink url='http://ubuntu.com'>Ubuntu Notify</ulink></listitem>
<listitem>....</listitem>
 	</itemizedlist>
	
	</para>

    <section>
        <title>Usage</title>
        <para>To use the announce plugin, include in your build script:</para>
        <sample id="useAnnouncePlugin" dir="announce" title="Using the announce plugin">
            <sourcefile file="build.gradle" snippet="use-plugin"/>
        </sample>
    </section>

    <section>
        <title>Tasks</title>
        <para>TBD</para>
    </section>

    <section>
        <title>Project layout</title>
        <para>TBD</para>
    </section>

    <section>
        <title>Dependency management</title>
        <para>TBD</para>
    </section>

    <section>
        <title>Convention properties</title>

        <para>The announce plugin adds an 
	
	TBD
	<!-- <literal>osgi</literal> property to every <emphasis>jar</emphasis> task.
            This <literal>osgi</literal> property points to an instance of
            <apilink class="org.gradle.api.plugins.osgi.OsgiManifest"/>. Via the OsgiManifest object you can control the
            generation of the OSGi Manifest of the respective jar. The OSGi plugin assign default values to the
            OsgiManifest object. -->
        </para>
        <table>
            <title>announce plugin properties</title>
            <thead>
                <tr>
                    <td>Task Property</td>
                    <td>Convention Property</td>
                </tr>
            </thead>
            <tr>
                <td>classesDir</td>
                <td>project.classesDir</td>
            </tr>
            <tr>
                <td>version</td>
                <td>project.version</td>
            </tr>
            <tr>
                <td>name</td>
                <td>project.archivesBaseName</td>
            </tr>
            <tr>
                <td>symbolicName</td>
                <td>transformation of the name and the group to produce a valid OSGi symbolic name</td>
            </tr>
            <tr>
                <td>classpath</td>
                <td>project.dependencies.resolve('runtime')</td>
            </tr>
        </table>

<ul>
	<li>w</li><li>x</li><li>y</li><li>z</li>
</ul>

        <para>
        	

        </para>
        <sample id="anouncePlugin" dir="userguide/tutorial/announce" title="Full example of annunce plugin usage.">
            <sourcefile file="build.gradle" snippet="full-example"/>
        </sample>
        <para>
	TBD
	</para>
    </section>
</chapter>
